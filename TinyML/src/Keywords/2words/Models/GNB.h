#pragma once
#include <cstdarg>
namespace Eloquent {
    namespace ML {
        namespace Port {
            class GaussianNB {
                public:
                    /**
                    * Predict class for features vector
                    */
                    int predict(float *x) {
                        float votes[2] = { 0.0f };
                        float theta[32] = { 0 };
                        float sigma[32] = { 0 };
                        theta[0] = 0.206432831222; theta[1] = 0.150290409605; theta[2] = 0.06574656993; theta[3] = 0.028448292841; theta[4] = 0.046764396929; theta[5] = 0.02852767124; theta[6] = 0.113982433473; theta[7] = 0.14785485539; theta[8] = 0.141220490752; theta[9] = 0.190309644689; theta[10] = 0.258718741675; theta[11] = 0.278311709167; theta[12] = 0.320076693181; theta[13] = 0.209635946783; theta[14] = 0.182468687009; theta[15] = 0.095619233018; theta[16] = 0.05560121757; theta[17] = 0.074422108532; theta[18] = 0.04695217172; theta[19] = 0.042936117936; theta[20] = 0.116087175722; theta[21] = 0.121871198867; theta[22] = 0.20279705681; theta[23] = 0.225037816844; theta[24] = 0.279517152061; theta[25] = 0.262485554718; theta[26] = 0.328716756178; theta[27] = 0.305279143709; theta[28] = 0.367487981769; theta[29] = 0.351911845321; theta[30] = 0.328145699542; theta[31] = 0.318459173672;
                        sigma[0] = 0.891467012891; sigma[1] = 0.584745925007; sigma[2] = 0.370059828929; sigma[3] = 0.393383805678; sigma[4] = 0.486657661529; sigma[5] = 0.346114112627; sigma[6] = 0.400025098479; sigma[7] = 0.382748492746; sigma[8] = 0.399436499416; sigma[9] = 0.415061036721; sigma[10] = 0.644199039736; sigma[11] = 0.86584680707; sigma[12] = 1.322411905301; sigma[13] = 0.948862097374; sigma[14] = 1.011507704808; sigma[15] = 0.890460571428; sigma[16] = 0.725186472006; sigma[17] = 0.770296416081; sigma[18] = 0.679940854477; sigma[19] = 0.686017044858; sigma[20] = 0.783041338791; sigma[21] = 0.945795280398; sigma[22] = 1.090770337499; sigma[23] = 1.095418696931; sigma[24] = 1.388417077737; sigma[25] = 1.556309217139; sigma[26] = 1.38812131673; sigma[27] = 1.446190441954; sigma[28] = 1.498182481329; sigma[29] = 1.372736175458; sigma[30] = 1.34183780741; sigma[31] = 1.262839106926;
                        votes[0] = 0.5 - gauss(x, theta, sigma);
                        theta[0] = 0.5559565199; theta[1] = 0.216239076304; theta[2] = 0.165129113557; theta[3] = 0.201223701617; theta[4] = 0.214586550125; theta[5] = 0.015362974971; theta[6] = 0.011496670527; theta[7] = 0.02906459265; theta[8] = 0.043210409787; theta[9] = 0.147242491988; theta[10] = 0.216074666268; theta[11] = 0.283561203865; theta[12] = 0.367406390248; theta[13] = 0.32281554941; theta[14] = 0.430593374374; theta[15] = 0.429940886208; theta[16] = 0.491097229859; theta[17] = 0.594865499649; theta[18] = 0.609803293953; theta[19] = 0.527931038058; theta[20] = 0.549029267904; theta[21] = 0.503710405732; theta[22] = 0.464476043806; theta[23] = 0.47791121559; theta[24] = 0.471285934093; theta[25] = 0.485228902159; theta[26] = 0.471243748039; theta[27] = 0.467432509825; theta[28] = 0.434448242594; theta[29] = 0.414194683846; theta[30] = 0.389578470584; theta[31] = 0.309572414865;
                        sigma[0] = 1.778282382001; sigma[1] = 1.050288048026; sigma[2] = 0.935494671392; sigma[3] = 1.42587475022; sigma[4] = 1.212215159769; sigma[5] = 0.645837066236; sigma[6] = 0.545882043783; sigma[7] = 0.429774808893; sigma[8] = 0.395667828379; sigma[9] = 0.375718028979; sigma[10] = 0.44427867293; sigma[11] = 0.521083490158; sigma[12] = 0.85854641716; sigma[13] = 0.565138293101; sigma[14] = 0.780574435815; sigma[15] = 0.843971398286; sigma[16] = 0.814559700835; sigma[17] = 1.333175173721; sigma[18] = 1.325027901187; sigma[19] = 1.255210621615; sigma[20] = 1.373674454653; sigma[21] = 1.450672382748; sigma[22] = 1.30511861783; sigma[23] = 1.228334710397; sigma[24] = 1.155761604823; sigma[25] = 1.211129256832; sigma[26] = 1.24664395718; sigma[27] = 1.172489538141; sigma[28] = 1.13859906418; sigma[29] = 1.168954964813; sigma[30] = 1.040716606967; sigma[31] = 0.873939179978;
                        votes[1] = 0.5 - gauss(x, theta, sigma);
                        // return argmax of votes
                        uint8_t classIdx = 0;
                        float maxVotes = votes[0];

                        for (uint8_t i = 1; i < 2; i++) {
                            if (votes[i] > maxVotes) {
                                classIdx = i;
                                maxVotes = votes[i];
                            }
                        }

                        return classIdx;
                    }

                protected:
                    /**
                    * Compute gaussian value
                    */
                    float gauss(float *x, float *theta, float *sigma) {
                        float gauss = 0.0f;

                        for (uint16_t i = 0; i < 32; i++) {
                            gauss += log(sigma[i]);
                            gauss += abs(x[i] - theta[i]) / sigma[i];
                        }

                        return gauss;
                    }
                };
            }
        }
    }