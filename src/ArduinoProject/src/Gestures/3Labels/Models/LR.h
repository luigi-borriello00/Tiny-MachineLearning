#pragma once
#include <cstdarg>
namespace Eloquent {
    namespace ML {
        namespace Port {
            class LogisticRegression {
                public:
                    /**
                    * Predict class for features vector
                    */
                    int predict(float *x) {
                        float votes[3] = { -1.35890513088 ,0.586106567222 ,0.772798563658  };
                        votes[0] += dot(x,   0.230506500815  , -1.04964931456  , -0.213623686973  , 0.055909358266  , -0.635319034386  , 0.344754466189  , 0.297768813312  , -0.318921716492  , -0.21307120601  , 1.2661888e-05  , -0.037032521745  , 0.071653111146  , 0.305631791489  , -0.073041645419  , -0.739002753793  , 0.143319671113  , -1.993826556245  , 0.12103920076  , -0.478967697861  , -0.570592833698  , 0.633053554391  , -0.823739709965  , 0.154120181607  , 0.523592538976  , -1.030259057237  , -1.104188954497  , 0.666882306879  , -0.809590548708  , -1.825715876359  , 1.033658469359  , -0.016263502399  , -1.320653380794  , -0.019835288779  , 0.642182754745  , -0.442403504866  , -0.358021329097  , 0.721089731173  , 0.037703269038  , -0.034883332181  , 0.7327376827  , 0.332196545224  , 0.015244312665 );
                        votes[1] += dot(x,   -0.889963826457  , 1.070652206518  , 0.265352530269  , -0.859375508276  , 1.22572541804  , -0.187130795987  , -0.86485809122  , 0.275908320823  , 0.846336713494  , -0.280081597815  , -0.067566912876  , 0.286633889202  , -0.22408597995  , -0.199064608186  , 0.846170518948  , 0.460722003956  , 1.297311886472  , -1.759400498395  , 1.140621839209  , 1.034655541022  , -2.355847143815  , 0.423418580267  , 0.946619942576  , -0.729723252525  , -0.552962127646  , 1.026929582672  , 1.291951352066  , -1.15324210338  , 0.703708788159  , 0.875675406963  , -1.29789609451  , 0.210696318895  , 0.231750846052  , -1.098372588844  , 0.218081803674  , -0.291547379413  , -0.852360596699  , 0.505139449637  , -0.244494571115  , -0.834091047135  , 0.385760046908  , 0.032502963175 );
                        votes[2] += dot(x,   0.659457325642  , -0.021002891958  , -0.051728843296  , 0.80346615001  , -0.590406383654  , -0.157623670202  , 0.567089277907  , 0.043013395669  , -0.633265507485  , 0.280068935927  , 0.104599434621  , -0.358287000348  , -0.08154581154  , 0.272106253605  , -0.107167765155  , -0.604041675068  , 0.696514669773  , 1.638361297635  , -0.661654141348  , -0.464062707324  , 1.722793589424  , 0.400321129699  , -1.100740124183  , 0.206130713549  , 1.583221184883  , 0.077259371826  , -1.958833658945  , 1.962832652088  , 1.1220070882  , -1.909333876322  , 1.314159596909  , 1.109957061899  , -0.211915557273  , 0.456189834099  , 0.224321701191  , 0.64956870851  , 0.131270865526  , -0.542842718675  , 0.279377903297  , 0.101353364435  , -0.717956592132  , -0.04774727584 );
                        // return argmax of votes
                        uint8_t classIdx = 0;
                        float maxVotes = votes[0];

                        for (uint8_t i = 1; i < 3; i++) {
                            if (votes[i] > maxVotes) {
                                classIdx = i;
                                maxVotes = votes[i];
                            }
                        }

                        return classIdx;
                    }

                protected:
                    /**
                    * Compute dot product
                    */
                    float dot(float *x, ...) {
                        va_list w;
                        va_start(w, 42);
                        float dot = 0.0;

                        for (uint16_t i = 0; i < 42; i++) {
                            const float wi = va_arg(w, double);
                            dot += x[i] * wi;
                        }

                        return dot;
                    }
                };
            }
        }
    }