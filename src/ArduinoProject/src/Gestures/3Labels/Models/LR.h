#pragma once
#include <cstdarg>
namespace Eloquent {
    namespace ML {
        namespace Port {
            class LogisticRegression {
                public:
                    /**
                    * Predict class for features vector
                    */
                    int predict(float *x) {
                        float votes[3] = { -0.123712278549 ,0.239945851508 ,-0.116233572959  };
                        votes[0] += dot(x,   0.146670463783  , 0.047462387452  , 0.02222212399  , 0.108409108902  , 0.139026059589  , -0.240201463717  , 0.365394755583  , -0.415330598892  , 0.608846793271  , 0.683832405415  , 0.458084371258  , 0.527951079055  , 0.56342832267  , -0.342136328227  , -0.854765618884  , 0.254224206244  , -0.598277617658  , -0.380347165626  , -0.151575271288  , -0.430650157944  , -0.103891206343  , -0.146204798532  , -0.247226582411  , 0.891579930087  , -0.130469169144  , -0.414078810284  , 0.525595585721  , 0.163704880689  , -0.212072649241  , -0.328067144125  , 0.253584111513  , -0.113271536709  , -0.157696318368  , 0.214691032866  , 0.076722882674  , 0.010541911709  , 0.150732158806  , 0.42738287564  , 0.103734326701  , 0.091350769601  , 0.206326721633  , 0.139353572776 );
                        votes[1] += dot(x,   -0.140641300086  , 0.055391603532  , 0.239692387151  , -0.042004543087  , 0.006313949712  , 0.334096001934  , -0.223957316456  , 0.412621196778  , -0.034198518153  , -0.17166660564  , -0.177847140352  , -0.156945700412  , -0.090885770664  , -0.182179239294  , 1.099279840157  , 0.138972722872  , 0.455293890811  , -0.85440999556  , 0.140414608694  , 0.495313017354  , -0.663378937523  , -0.15846964941  , 0.319201951791  , 0.698546398991  , -0.330249578543  , 0.26627351862  , 0.530203543811  , -0.264147147187  , 0.18008135824  , -0.079885029279  , -0.043175018412  , -0.008564685434  , 0.098821998432  , 0.073937780808  , -0.124082435073  , 0.077132050535  , 0.154111181021  , -0.040370342926  , -0.272508959074  , 0.06756751839  , -0.035737985753  , 0.129284346142 );
                        votes[2] += dot(x,   -0.006029163697  , -0.102853990984  , -0.261914511141  , -0.066404565815  , -0.145340009301  , -0.093894538217  , -0.141437439126  , 0.002709402114  , -0.574648275119  , -0.512165799776  , -0.280237230906  , -0.371005378643  , -0.472542552006  , 0.524315567521  , -0.244514221272  , -0.393196929115  , 0.142983726847  , 1.234757161186  , 0.011160662595  , -0.064662859411  , 0.767270143866  , 0.304674447942  , -0.07197536938  , -1.590126329079  , 0.460718747687  , 0.147805291663  , -1.055799129532  , 0.100442266498  , 0.031991291001  , 0.407952173404  , -0.2104090931  , 0.121836222143  , 0.058874319935  , -0.288628813674  , 0.047359552399  , -0.087673962245  , -0.304843339827  , -0.387012532715  , 0.168774632373  , -0.158918287991  , -0.17058873588  , -0.268637918918 );
                        // return argmax of votes
                        uint8_t classIdx = 0;
                        float maxVotes = votes[0];

                        for (uint8_t i = 1; i < 3; i++) {
                            if (votes[i] > maxVotes) {
                                classIdx = i;
                                maxVotes = votes[i];
                            }
                        }

                        return classIdx;
                    }

                protected:
                    /**
                    * Compute dot product
                    */
                    float dot(float *x, ...) {
                        va_list w;
                        va_start(w, 42);
                        float dot = 0.0;

                        for (uint16_t i = 0; i < 42; i++) {
                            const float wi = va_arg(w, double);
                            dot += x[i] * wi;
                        }

                        return dot;
                    }
                };
            }
        }
    }