#pragma once
#include <cstdarg>
namespace Eloquent {
    namespace ML {
        namespace Port {
            class LogisticRegression {
                public:
                    /**
                    * Predict class for features vector
                    */
                    int predict(float *x) {
                        float votes[4] = { 2.4296595e-05 ,2.782691e-06 ,-2.6473587e-05 ,-6.05698e-07  };
                        votes[0] += dot(x,   -0.000422741858  , 0.000369748827  , 0.000298778189  , -0.000363985115  , -0.000337045541  , 8.8821331e-05  , 0.000143655504  , 0.000191558963  , 0.000442327788  , -3.8915447e-05  , 0.00026418272  , -0.000252978734  , 5.4891528e-05  , -0.000202587135  , -5.46812e-05  , 0.001485016807  , -0.001191761093  , -0.000820844519  , -0.001229838429  , 0.001211692713  , -0.000856567483  , 0.000162323178  , 0.000501542708  , -0.000575214568  , 0.002411773461  , -0.001710750618  , 8.7651568e-05  , -0.001247220411  , 0.001365060555  , 0.000395673945  , -0.001058417508  , 0.000946244177 );
                        votes[1] += dot(x,   -0.000174685054  , -0.000258087683  , -0.000204654427  , 0.000642842909  , -1.5396207e-05  , 1.1424328e-05  , -0.000251700732  , -4.7361688e-05  , -0.000699550683  , -0.000244131136  , 0.000113229584  , 0.000290694292  , 4.6452408e-05  , 0.000151127504  , 0.00070768574  , -0.001705592524  , 0.001566591642  , 0.000122424029  , 0.000103310482  , 0.001259935963  , -0.000618955855  , -0.000337732312  , -3.3866085e-05  , -8.510027e-06  , -0.000433904746  , 0.000143931505  , -0.000409708027  , 0.001399655835  , -0.000383534704  , -0.000867124965  , 0.000508580684  , 0.000934597169 );
                        votes[2] += dot(x,   0.000244960492  , 0.000454041705  , 1.5296891e-05  , -0.000477463213  , 1.0965183e-05  , 0.000154396625  , 7.1494626e-05  , 2.124636e-06  , 0.000220464946  , -0.000113286995  , -0.000671056628  , 0.000102031363  , 0.00037481267  , 0.000336332274  , -0.001165427233  , 0.000244828959  , -0.000242028519  , 0.001707874734  , -0.001246454894  , -0.00370167275  , 0.004122097854  , 0.000592766396  , -0.001445197404  , 0.001243095449  , -0.00200908753  , -6.1141792e-05  , 0.001542591547  , -0.000618306665  , -0.000600836736  , 0.000239213312  , -0.000148891452  , -0.000935512522 );
                        votes[3] += dot(x,   0.00035246642  , -0.000565702849  , -0.000109420652  , 0.00019860542  , 0.000341476566  , -0.000254642284  , 3.6550602e-05  , -0.000146321911  , 3.6757949e-05  , 0.000396333579  , 0.000293644324  , -0.000139746921  , -0.000476156606  , -0.000284872643  , 0.000512422693  , -2.4253241e-05  , -0.00013280203  , -0.001009454243  , 0.00237298284  , 0.001230044075  , -0.002646574516  , -0.000417357262  , 0.000977520781  , -0.000659370855  , 3.1218815e-05  , 0.001627960906  , -0.001220535088  , 0.000465871241  , -0.000380689115  , 0.000232237708  , 0.000698728276  , -0.000945328824 );
                        // return argmax of votes
                        uint8_t classIdx = 0;
                        float maxVotes = votes[0];

                        for (uint8_t i = 1; i < 4; i++) {
                            if (votes[i] > maxVotes) {
                                classIdx = i;
                                maxVotes = votes[i];
                            }
                        }

                        return classIdx;
                    }

                protected:
                    /**
                    * Compute dot product
                    */
                    float dot(float *x, ...) {
                        va_list w;
                        va_start(w, 32);
                        float dot = 0.0;

                        for (uint16_t i = 0; i < 32; i++) {
                            const float wi = va_arg(w, double);
                            dot += x[i] * wi;
                        }

                        return dot;
                    }
                };
            }
        }
    }