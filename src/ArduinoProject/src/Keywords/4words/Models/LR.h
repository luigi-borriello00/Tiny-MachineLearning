#pragma once
#include <cstdarg>
namespace Eloquent {
    namespace ML {
        namespace Port {
            class LogisticRegression {
                public:
                    /**
                    * Predict class for features vector
                    */
                    int predict(float *x) {
                        float votes[4] = { 7.8748794e-05 ,-0.263971444978 ,-2.017893071361 ,-0.956630431752  };
                        votes[0] += dot(x,   -0.000872546412  , 0.000435479134  , 0.000326523137  , -0.000404241789  , -0.000428626355  , 4.622485e-05  , 0.000139225247  , 0.000278406244  , 0.00044131019  , -0.000186690456  , 0.000461303885  , -0.000576746389  , 0.000241056738  , -0.000138750792  , -0.000171302661  , 0.001687701949  , -0.001491542532  , -0.00076024389  , -0.002434150816  , 0.002153950935  , -0.001430806898  , 0.000395747387  , 5.2859281e-05  , -0.00162560287  , 0.005115290264  , -0.003728237919  , 0.000707161016  , -0.003841765898  , 0.0043657023  , 0.001895463518  , -0.004813544177  , 0.002490541353 );
                        votes[1] += dot(x,   -0.000413650749  , -0.000347838268  , -0.000216285952  , 0.000673491213  , 1.0763704e-05  , 2.9621476e-05  , -0.000529612379  , -3.424893e-06  , -0.000833104308  , -0.000348389138  , -8.0821956e-05  , 0.000586758173  , 0.000118923941  , 0.000165542765  , 0.000421379588  , -0.001223060725  , 0.001535925902  , 0.000184767253  , -0.000868265283  , 0.001375204903  , 6.96501e-06  , -0.000465780737  , -0.000457806236  , 0.000146022843  , 0.000399147001  , -0.000961575546  , -0.001548886522  , 0.004471414311  , -0.002195486043  , -0.001756708143  , 0.00175352655  , 0.000762142908 );
                        votes[2] += dot(x,   0.000547482715  , 0.000616530213  , -5.8650529e-05  , -0.000533920102  , -7.477699e-06  , 0.000196027632  , 0.000208139257  , 8.283613e-06  , 0.000177282289  , -0.00010043627  , -0.000857267899  , 0.000276781615  , 0.000248942862  , 0.000413159657  , -0.001016807893  , 1.0793217e-05  , -0.000653569078  , 0.002069630027  , -0.000549845041  , -0.005152393572  , 0.004544546728  , -0.000127924883  , -0.00099579854  , 0.002549637854  , -0.003303339259  , 0.000180317174  , 0.002685323637  , -0.002405669542  , 0.000595013  , 0.001030259652  , -0.002039486229  , -8.2294557e-05 );
                        votes[3] += dot(x,   0.000488533887  , -0.000799299219  , -0.000250219693  , 0.00031370974  , 0.000516039864  , -0.000217991544  , -0.00024845182  , -0.000151033724  , 0.000131644032  , 0.000581300302  , 0.00024905318  , -3.0886061e-05  , -0.000540228378  , -0.00052687074  , 0.000201457399  , 0.000616656323  , -0.000600033002  , -0.00069825104  , 0.00097575483  , 0.001701579589  , -0.002460005076  , 6.2212306e-05  , 0.000822553369  , -0.00138923324  , -0.000416082215  , 0.004116391335  , -0.003517168142  , 0.001270612014  , -0.001093579912  , 0.000989559532  , 0.001854680033  , -0.002266408074 );
                        // return argmax of votes
                        uint8_t classIdx = 0;
                        float maxVotes = votes[0];

                        for (uint8_t i = 1; i < 4; i++) {
                            if (votes[i] > maxVotes) {
                                classIdx = i;
                                maxVotes = votes[i];
                            }
                        }

                        return classIdx;
                    }

                protected:
                    /**
                    * Compute dot product
                    */
                    float dot(float *x, ...) {
                        va_list w;
                        va_start(w, 32);
                        float dot = 0.0;

                        for (uint16_t i = 0; i < 32; i++) {
                            const float wi = va_arg(w, double);
                            dot += x[i] * wi;
                        }

                        return dot;
                    }
                };
            }
        }
    }