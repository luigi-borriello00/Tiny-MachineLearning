#pragma once
#include <cstdarg>
namespace Eloquent {
    namespace ML {
        namespace Port {
            class LogisticRegression {
                public:
                    /**
                    * Predict class for features vector
                    */
                    int predict(float *x) {
                        float votes[2] = { 0.001351239225  };
                        votes[0] += dot(x,   -2.237061397349  , -4.781914879694  , -0.203642839336  , -2.228541755323  , -4.732554889737  , -0.182102463192  , -2.213053134406  , -4.671428627463  , -0.147056479058  , -2.151301009207  , -4.900141366652  , -0.327525820755  , -2.225799612455  , -4.826875844365  , -0.291225490929  , -2.244338863418  , -4.757042671172  , -0.208645355914  , -2.179694668356  , -4.767764405249  , -0.202448489646  , -2.153002500742  , -4.81932576038  , -0.203219801153  , -2.157459327233  , -4.916463700861  , -0.259932937207  , -2.205859896674  , -4.728364632782  , -0.242901794367  , -2.173455117492  , -4.843703934769  , -0.350521939548  , -2.181877523579  , -4.90407768674  , -0.346121543517  , -2.166316288897  , -4.897773107444  , -0.323951207502  , -2.139106753006  , -4.896188075496  , -0.345051311727  , -2.205084519077  , -4.773331084287  , -0.223706429276  , -2.209763935072  , -4.723200979676  , -0.268157451388  , -2.226968859702  , -4.900128061136  , -0.283374696478  , -2.143767781326  , -4.725270194347  , -0.246713873686  , -2.210347117046  , -4.831601590659  , -0.29204205101  , -2.168843923564  , -4.708673541334  , -0.173668634185 );
                        // return argmax of votes
                        uint8_t classIdx = 0;
                        float maxVotes = votes[0];

                        for (uint8_t i = 1; i < 2; i++) {
                            if (votes[i] > maxVotes) {
                                classIdx = i;
                                maxVotes = votes[i];
                            }
                        }

                        return classIdx;
                    }

                protected:
                    /**
                    * Compute dot product
                    */
                    float dot(float *x, ...) {
                        va_list w;
                        va_start(w, 60);
                        float dot = 0.0;

                        for (uint16_t i = 0; i < 60; i++) {
                            const float wi = va_arg(w, double);
                            dot += x[i] * wi;
                        }

                        return dot;
                    }
                };
            }
        }
    }