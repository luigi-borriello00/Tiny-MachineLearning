#pragma once
#include <cstdarg>
namespace Eloquent {
    namespace ML {
        namespace Port {
            class GaussianNB {
                public:
                    /**
                    * Predict class for features vector
                    */
                    int predict(float *x) {
                        float votes[2] = { 0.0f };
                        float theta[60] = { 0 };
                        float sigma[60] = { 0 };
                        theta[0] = -0.040013550136; theta[1] = -0.013875338753; theta[2] = 0.98183604336; theta[3] = -0.04; theta[4] = -0.014078590786; theta[5] = 0.981727642276; theta[6] = -0.039979674797; theta[7] = -0.013841463415; theta[8] = 0.981808943089; theta[9] = -0.039911924119; theta[10] = -0.014085365854; theta[11] = 0.981761517615; theta[12] = -0.040013550136; theta[13] = -0.013922764228; theta[14] = 0.981849593496; theta[15] = -0.03993902439; theta[16] = -0.014092140921; theta[17] = 0.981788617886; theta[18] = -0.040013550136; theta[19] = -0.013922764228; theta[20] = 0.981768292683; theta[21] = -0.040040650407; theta[22] = -0.013983739837; theta[23] = 0.981829268293; theta[24] = -0.04; theta[25] = -0.013895663957; theta[26] = 0.981788617886; theta[27] = -0.040047425474; theta[28] = -0.014044715447; theta[29] = 0.981741192412; theta[30] = -0.039959349593; theta[31] = -0.013834688347; theta[32] = 0.981775067751; theta[33] = -0.040013550136; theta[34] = -0.014166666667; theta[35] = 0.981714092141; theta[36] = -0.039993224932; theta[37] = -0.013902439024; theta[38] = 0.981822493225; theta[39] = -0.039864498645; theta[40] = -0.013997289973; theta[41] = 0.981802168022; theta[42] = -0.040006775068; theta[43] = -0.01412601626; theta[44] = 0.981768292683; theta[45] = -0.040040650407; theta[46] = -0.013746612466; theta[47] = 0.981863143631; theta[48] = -0.039945799458; theta[49] = -0.014261517615; theta[50] = 0.981693766938; theta[51] = -0.04006097561; theta[52] = -0.013841463415; theta[53] = 0.98183604336; theta[54] = -0.039864498645; theta[55] = -0.014098915989; theta[56] = 0.981720867209; theta[57] = -0.040054200542; theta[58] = -0.013875338753; theta[59] = 0.981842818428;
                        sigma[0] = 5.731689e-05; sigma[1] = 0.000137149771; sigma[2] = 1.5802387e-05; sigma[3] = 5.7181572e-05; sigma[4] = 0.00013864965; sigma[5] = 1.4291675e-05; sigma[6] = 5.6977907e-05; sigma[7] = 0.000137072427; sigma[8] = 1.4817156e-05; sigma[9] = 5.7783571e-05; sigma[10] = 0.000137849082; sigma[11] = 1.4512232e-05; sigma[12] = 5.8129898e-05; sigma[13] = 0.000136712192; sigma[14] = 1.521044e-05; sigma[15] = 5.8194114e-05; sigma[16] = 0.000137319424; sigma[17] = 1.4822527e-05; sigma[18] = 5.8129898e-05; sigma[19] = 0.000138609211; sigma[20] = 1.4556068e-05; sigma[21] = 5.7721925e-05; sigma[22] = 0.00013738185; sigma[23] = 1.5081962e-05; sigma[24] = 5.8130082e-05; sigma[25] = 0.00013556906; sigma[26] = 1.4822527e-05; sigma[27] = 5.7789079e-05; sigma[28] = 0.000137366564; sigma[29] = 1.4515675e-05; sigma[30] = 5.8128429e-05; sigma[31] = 0.000137192185; sigma[32] = 1.4735314e-05; sigma[33] = 5.8671903e-05; sigma[34] = 0.000137855691; sigma[35] = 1.4338311e-05; sigma[36] = 5.7655781e-05; sigma[37] = 0.000137887501; sigma[38] = 1.5038952e-05; sigma[39] = 5.7163211e-05; sigma[40] = 0.000136325196; sigma[41] = 1.4909372e-05; sigma[42] = 5.7113776e-05; sigma[43] = 0.000138599296; sigma[44] = 1.4691569e-05; sigma[45] = 5.7857426e-05; sigma[46] = 0.00013738566; sigma[47] = 1.5295634e-05; sigma[48] = 5.7585138e-05; sigma[49] = 0.000138275782; sigma[50] = 1.4204325e-05; sigma[51] = 5.7516607e-05; sigma[52] = 0.000136801425; sigma[53] = 1.512488e-05; sigma[54] = 5.7840718e-05; sigma[55] = 0.000137602682; sigma[56] = 1.438279e-05; sigma[57] = 5.7178634e-05; sigma[58] = 0.000138233782; sigma[59] = 1.5167706e-05;
                        votes[0] = 0.506172839506 - gauss(x, theta, sigma);
                        theta[0] = -0.039548611111; theta[1] = -0.014090277778; theta[2] = 0.980868055556; theta[3] = -0.0395625; theta[4] = -0.014333333333; theta[5] = 0.980868055556; theta[6] = -0.039597222222; theta[7] = -0.014145833333; theta[8] = 0.980861111111; theta[9] = -0.039486111111; theta[10] = -0.014166666667; theta[11] = 0.980902777778; theta[12] = -0.039513888889; theta[13] = -0.014298611111; theta[14] = 0.980847222222; theta[15] = -0.039555555556; theta[16] = -0.014020833333; theta[17] = 0.980819444444; theta[18] = -0.039416666667; theta[19] = -0.014395833333; theta[20] = 0.980847222222; theta[21] = -0.039666666667; theta[22] = -0.014083333333; theta[23] = 0.980923611111; theta[24] = -0.039548611111; theta[25] = -0.014236111111; theta[26] = 0.980895833333; theta[27] = -0.039625; theta[28] = -0.014291666667; theta[29] = 0.980833333333; theta[30] = -0.039520833333; theta[31] = -0.013916666667; theta[32] = 0.980819444444; theta[33] = -0.039576388889; theta[34] = -0.014527777778; theta[35] = 0.980833333333; theta[36] = -0.039611111111; theta[37] = -0.013854166667; theta[38] = 0.980888888889; theta[39] = -0.0394375; theta[40] = -0.014465277778; theta[41] = 0.980881944444; theta[42] = -0.039625; theta[43] = -0.014020833333; theta[44] = 0.980895833333; theta[45] = -0.039513888889; theta[46] = -0.014201388889; theta[47] = 0.980923611111; theta[48] = -0.039541666667; theta[49] = -0.014340277778; theta[50] = 0.980868055556; theta[51] = -0.039520833333; theta[52] = -0.013965277778; theta[53] = 0.980875; theta[54] = -0.0394375; theta[55] = -0.014277777778; theta[56] = 0.980833333333; theta[57] = -0.039555555556; theta[58] = -0.014034722222; theta[59] = 0.980909722222;
                        sigma[0] = 2.2921248e-05; sigma[1] = 0.000127922406; sigma[2] = 7.927035e-06; sigma[3] = 2.3350261e-05; sigma[4] = 0.00012775; sigma[5] = 8.760369e-06; sigma[6] = 2.358777e-05; sigma[7] = 0.0001267704; sigma[8] = 8.702932e-06; sigma[9] = 2.4735918e-05; sigma[10] = 0.0001275; sigma[11] = 9.046104e-06; sigma[12] = 2.3791474e-05; sigma[13] = 0.000125619165; sigma[14] = 8.58777e-06; sigma[15] = 2.3691358e-05; sigma[16] = 0.000126402344; sigma[17] = 8.356289e-06; sigma[18] = 2.3965278e-05; sigma[19] = 0.000127134983; sigma[20] = 8.58777e-06; sigma[21] = 2.2805556e-05; sigma[22] = 0.000127493056; sigma[23] = 8.383054e-06; sigma[24] = 2.3476804e-05; sigma[25] = 0.000127610918; sigma[26] = 8.155816e-06; sigma[27] = 2.4442709e-05; sigma[28] = 0.000127414931; sigma[29] = 8.472222e-06; sigma[30] = 2.4284288e-05; sigma[31] = 0.000126604167; sigma[32] = 8.356289e-06; sigma[33] = 2.4473332e-05; sigma[34] = 0.000126027006; sigma[35] = 8.472222e-06; sigma[36] = 2.4015432e-05; sigma[37] = 0.000124381511; sigma[38] = 8.932099e-06; sigma[39] = 2.3780816e-05; sigma[40] = 0.000127075184; sigma[41] = 8.874952e-06; sigma[42] = 2.3609375e-05; sigma[43] = 0.000126680122; sigma[44] = 8.98915e-06; sigma[45] = 2.4624807e-05; sigma[46] = 0.000127417776; sigma[47] = 8.383054e-06; sigma[48] = 2.3956597e-05; sigma[49] = 0.000127481434; sigma[50] = 8.760369e-06; sigma[51] = 2.4006511e-05; sigma[52] = 0.000125873795; sigma[53] = 8.817709e-06; sigma[54] = 2.4753038e-05; sigma[55] = 0.000126700618; sigma[56] = 8.472222e-06; sigma[57] = 2.3969136e-05; sigma[58] = 0.000125873795; sigma[59] = 8.269628e-06;
                        votes[1] = 0.493827160494 - gauss(x, theta, sigma);
                        // return argmax of votes
                        uint8_t classIdx = 0;
                        float maxVotes = votes[0];

                        for (uint8_t i = 1; i < 2; i++) {
                            if (votes[i] > maxVotes) {
                                classIdx = i;
                                maxVotes = votes[i];
                            }
                        }

                        return classIdx;
                    }

                protected:
                    /**
                    * Compute gaussian value
                    */
                    float gauss(float *x, float *theta, float *sigma) {
                        float gauss = 0.0f;

                        for (uint16_t i = 0; i < 60; i++) {
                            gauss += log(sigma[i]);
                            gauss += abs(x[i] - theta[i]) / sigma[i];
                        }

                        return gauss;
                    }
                };
            }
        }
    }