#pragma once
#include <cstdarg>
namespace Eloquent {
    namespace ML {
        namespace Port {
            class LogisticRegression {
                public:
                    /**
                    * Predict class for features vector
                    */
                    int predict(float *x) {
                        float votes[6] = { 0.02116948218 ,0.027623964161 ,-0.000354804533 ,-4.347458050272 ,-2.195977878007 ,-6.91597945335  };
                        votes[0] += dot(x,   -0.012737510613  , 0.0179407245  , -0.02483422896  , 0.016713223504  , -0.011530911556  , -0.030519233842  , 0.030732382425  , 0.001728274225  , -0.00490053454  , 0.008131853133  , 0.021954550158  , -0.016134259788  , 0.028591041471  , 0.013140853132  , 0.018311665284  , -0.038235751233  , -0.014325737014  , -0.001472683304  , 0.011131334864  , -0.019615412738  , -0.020293396942  , 0.012034630389  , -0.009971143118  , 0.000694314729  , -0.00318022655  , -0.00446714683  , 0.027883126899  , 0.005796549139  , 0.004827503243  , 0.007293782008  , 0.014185898  , -0.029969964114 );
                        votes[1] += dot(x,   -0.01342728442  , -0.008909447496  , 0.022859944939  , -0.010290944857  , 0.008206182412  , 0.020218542136  , -0.014107899699  , -0.004644918494  , 0.004318406312  , -0.003678499835  , -0.002099679452  , 0.004697123326  , -0.020010969872  , -0.014716519225  , -0.010356433102  , 0.018827957076  , 0.016838965705  , -0.002956250204  , -0.010860876993  , 0.019497012142  , 0.010604743265  , -0.003690488294  , 0.000892533646  , 0.001073409435  , 0.013120748801  , 0.009478002498  , -0.011067247008  , -0.005290849207  , -0.001256994477  , -0.016843646017  , -0.00757859365  , 0.010442095346 );
                        votes[2] += dot(x,   0.015902838443  , -0.001380957153  , -0.001967582958  , -0.005748697334  , 0.001316792392  , 0.009468952299  , -0.019035465007  , 0.005107033568  , -0.002446356686  , -0.001736237242  , -0.014433387807  , 0.008009789314  , -0.009277872571  , 0.00421662791  , 4.7064505e-05  , 0.008634205428  , -0.010295215111  , -0.002375040891  , 0.017850022648  , 0.003154101743  , 0.002254802491  , -0.015541272382  , 0.023092773856  , 0.002938468216  , 0.00659435617  , -0.008287454589  , -0.015335183148  , 0.010019796534  , -0.007674874219  , 0.004743874081  , -0.021591162874  , 0.013232128062 );
                        votes[3] += dot(x,   0.017776603837  , -0.01544047479  , 0.00200606069  , 0.002800286292  , 0.000624563482  , 0.004177694483  , -0.002010252296  , 0.001751908649  , 0.007836322478  , -0.007354579881  , -0.005688557152  , 0.008263489975  , -0.003916765432  , 0.002671306943  , -0.001319835213  , 0.003581233445  , -0.011544312763  , -0.00562626003  , 0.00132831008  , 0.003025843052  , -0.004974257494  , -0.026850657725  , 0.010792687816  , 0.005276179774  , -0.00518455867  , 0.000850493301  , 0.000319148379  , 0.007676133302  , 0.003848005937  , 0.00977820689  , 0.013924311651  , -0.017711201471 );
                        votes[4] += dot(x,   0.011439025364  , -0.000624401169  , -0.004176100825  , 0.000727972684  , -0.002892527554  , 0.005421058955  , -0.000712221883  , 0.008017669196  , 0.006032367718  , -0.003615103709  , -0.015864125918  , 0.000474044185  , -0.002495283373  , -0.00264589223  , -0.005763953606  , 0.011483892522  , 0.004697111256  , 0.008429517278  , -0.012410231517  , 0.00194522292  , 0.011184649049  , 0.004575303364  , -0.006297947077  , -0.002614516401  , -0.004953270659  , -0.001814826764  , -0.015634126815  , -0.008159228547  , 0.005736861817  , 0.00600707523  , 0.005252694963  , -0.00055471236 );
                        votes[5] += dot(x,   -0.021440741462  , 0.017251152192  , 0.003381882878  , -0.004096314804  , 0.008734798284  , 0.003600838276  , -0.002870090066  , -0.019759377323  , -0.021383549237  , 0.012612066728  , 0.011203029631  , -0.002704140974  , -0.000674113105  , 0.009401084028  , -0.004975460129  , 0.003450339262  , 0.003126353884  , -0.007096744643  , 0.006478960264  , -0.00453046791  , 0.012109083602  , 0.01921820565  , -0.006525906153  , -0.000586807177  , -0.002564918363  , -0.001397879646  , 0.005744219689  , 0.013587183273  , -0.019789062434  , -0.008749398899  , -0.028568846174  , 0.02904377007 );
                        // return argmax of votes
                        uint8_t classIdx = 0;
                        float maxVotes = votes[0];

                        for (uint8_t i = 1; i < 6; i++) {
                            if (votes[i] > maxVotes) {
                                classIdx = i;
                                maxVotes = votes[i];
                            }
                        }

                        return classIdx;
                    }

                protected:
                    /**
                    * Compute dot product
                    */
                    float dot(float *x, ...) {
                        va_list w;
                        va_start(w, 32);
                        float dot = 0.0;

                        for (uint16_t i = 0; i < 32; i++) {
                            const float wi = va_arg(w, double);
                            dot += x[i] * wi;
                        }

                        return dot;
                    }
                };
            }
        }
    }