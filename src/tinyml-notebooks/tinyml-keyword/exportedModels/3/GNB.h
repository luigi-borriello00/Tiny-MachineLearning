#pragma once
#include <cstdarg>
namespace Eloquent {
    namespace ML {
        namespace Port {
            class GaussianNB {
                public:
                    /**
                    * Predict class for features vector
                    */
                    int predict(float *x) {
                        float votes[3] = { 0.0f };
                        float theta[32] = { 0 };
                        float sigma[32] = { 0 };
                        theta[0] = 0.20132282442; theta[1] = 0.13161306314; theta[2] = 0.058124539924; theta[3] = 0.040284685768; theta[4] = 0.08571609972; theta[5] = 0.116157912939; theta[6] = 0.251879784234; theta[7] = 0.357193707835; theta[8] = 0.35496122144; theta[9] = 0.306079408442; theta[10] = 0.245847589046; theta[11] = 0.207161055414; theta[12] = 0.170293851477; theta[13] = 0.085257262306; theta[14] = 0.003622037351; theta[15] = -0.040708117976; theta[16] = -0.081128213175; theta[17] = -0.056438524617; theta[18] = -0.052256953745; theta[19] = -0.068857847562; theta[20] = -0.071460863078; theta[21] = -0.022852032456; theta[22] = 0.05787815683; theta[23] = 0.074030295216; theta[24] = 0.114468483175; theta[25] = 0.089692051602; theta[26] = 0.212106493038; theta[27] = 0.179544348642; theta[28] = 0.242599850797; theta[29] = 0.205369992522; theta[30] = 0.218613263324; theta[31] = 0.15940894836;
                        sigma[0] = 0.809116172902; sigma[1] = 0.616374865699; sigma[2] = 0.393536392692; sigma[3] = 0.331409343456; sigma[4] = 0.418389375389; sigma[5] = 0.313985363516; sigma[6] = 0.405730974751; sigma[7] = 0.423679257481; sigma[8] = 0.467846301139; sigma[9] = 0.54740764079; sigma[10] = 0.613184066046; sigma[11] = 0.702455758399; sigma[12] = 0.518374862334; sigma[13] = 0.445296207183; sigma[14] = 0.369027548228; sigma[15] = 0.364282402865; sigma[16] = 0.287044854224; sigma[17] = 0.230703170823; sigma[18] = 0.25605752954; sigma[19] = 0.264366506492; sigma[20] = 0.310255466518; sigma[21] = 0.414248722808; sigma[22] = 0.541027620106; sigma[23] = 0.725573257378; sigma[24] = 0.953065432883; sigma[25] = 0.920539949672; sigma[26] = 1.224634937229; sigma[27] = 1.136087262888; sigma[28] = 1.242351407885; sigma[29] = 1.140929527873; sigma[30] = 0.960062445102; sigma[31] = 0.896590928461;
                        votes[0] = 0.333333333333 - gauss(x, theta, sigma);
                        theta[0] = 0.194155280476; theta[1] = 0.079451196724; theta[2] = 0.061222568809; theta[3] = 0.023261389803; theta[4] = -0.048790476749; theta[5] = -0.169701677183; theta[6] = -0.190258581831; theta[7] = -0.083246810304; theta[8] = -0.049910063612; theta[9] = 0.050333974132; theta[10] = 0.328219183322; theta[11] = 0.588763629109; theta[12] = 0.738184544406; theta[13] = 0.909291605603; theta[14] = 1.002113353695; theta[15] = 1.159365083709; theta[16] = 1.274365805065; theta[17] = 1.317041725725; theta[18] = 1.401648780081; theta[19] = 1.312266043695; theta[20] = 1.307831467284; theta[21] = 1.273568260564; theta[22] = 1.158066879733; theta[23] = 1.147510196838; theta[24] = 0.991781994491; theta[25] = 0.837567623804; theta[26] = 0.949394311311; theta[27] = 0.849098044158; theta[28] = 0.783050263378; theta[29] = 0.757608585375; theta[30] = 0.732386359594; theta[31] = 0.637082432895;
                        sigma[0] = 0.946014180857; sigma[1] = 0.60895157804; sigma[2] = 0.800287747464; sigma[3] = 0.86786227809; sigma[4] = 0.598700310789; sigma[5] = 0.42916246249; sigma[6] = 0.348632375222; sigma[7] = 0.292959100552; sigma[8] = 0.369185722095; sigma[9] = 0.512636661044; sigma[10] = 0.990800181846; sigma[11] = 1.63819905052; sigma[12] = 1.478437293547; sigma[13] = 1.811151067906; sigma[14] = 1.817358621106; sigma[15] = 2.31328355091; sigma[16] = 2.633072833315; sigma[17] = 2.647539777883; sigma[18] = 3.32787883056; sigma[19] = 3.302977323069; sigma[20] = 3.787275381195; sigma[21] = 4.126182768097; sigma[22] = 3.56125867507; sigma[23] = 3.765234343835; sigma[24] = 3.494793879103; sigma[25] = 3.377555980274; sigma[26] = 5.293278568395; sigma[27] = 4.512645893733; sigma[28] = 3.572720685409; sigma[29] = 3.209246006438; sigma[30] = 2.844259413569; sigma[31] = 2.688451639841;
                        votes[1] = 0.333333333333 - gauss(x, theta, sigma);
                        theta[0] = 0.643983048506; theta[1] = 0.263763746742; theta[2] = 0.218951392189; theta[3] = 0.224752385752; theta[4] = 0.281023266717; theta[5] = 0.169928766319; theta[6] = 0.185762474585; theta[7] = 0.23877057884; theta[8] = 0.26911767557; theta[9] = 0.261962445827; theta[10] = 0.216483950154; theta[11] = 0.210174871565; theta[12] = 0.203230591784; theta[13] = 0.185494700249; theta[14] = 0.166324146617; theta[15] = 0.183822085701; theta[16] = 0.213821764477; theta[17] = 0.244591188863; theta[18] = 0.293350267555; theta[19] = 0.224231381237; theta[20] = 0.194464023577; theta[21] = 0.217726507828; theta[22] = 0.299840200148; theta[23] = 0.254228603276; theta[24] = 0.251137992914; theta[25] = 0.263248023304; theta[26] = 0.34118128363; theta[27] = 0.329079280396; theta[28] = 0.304513971727; theta[29] = 0.264558274809; theta[30] = 0.276999067967; theta[31] = 0.161063572795;
                        sigma[0] = 1.932708844992; sigma[1] = 1.258924714669; sigma[2] = 1.091984819881; sigma[3] = 1.13846731007; sigma[4] = 1.00513467829; sigma[5] = 0.586630667268; sigma[6] = 0.527417389175; sigma[7] = 0.379442310499; sigma[8] = 0.405081156897; sigma[9] = 0.415544402405; sigma[10] = 0.35398135484; sigma[11] = 0.378058816194; sigma[12] = 0.284999490402; sigma[13] = 0.264722851553; sigma[14] = 0.276868834426; sigma[15] = 0.336855730215; sigma[16] = 0.329288510073; sigma[17] = 0.393855987331; sigma[18] = 0.49469865314; sigma[19] = 0.460414590559; sigma[20] = 0.553426477793; sigma[21] = 0.643361819422; sigma[22] = 1.337271107204; sigma[23] = 0.845472523554; sigma[24] = 0.842105484704; sigma[25] = 0.857915035033; sigma[26] = 1.166634438703; sigma[27] = 0.989525779181; sigma[28] = 1.006419607559; sigma[29] = 0.989080616397; sigma[30] = 0.782396122976; sigma[31] = 0.635192942823;
                        votes[2] = 0.333333333333 - gauss(x, theta, sigma);
                        // return argmax of votes
                        uint8_t classIdx = 0;
                        float maxVotes = votes[0];

                        for (uint8_t i = 1; i < 3; i++) {
                            if (votes[i] > maxVotes) {
                                classIdx = i;
                                maxVotes = votes[i];
                            }
                        }

                        return classIdx;
                    }

                protected:
                    /**
                    * Compute gaussian value
                    */
                    float gauss(float *x, float *theta, float *sigma) {
                        float gauss = 0.0f;

                        for (uint16_t i = 0; i < 32; i++) {
                            gauss += log(sigma[i]);
                            gauss += abs(x[i] - theta[i]) / sigma[i];
                        }

                        return gauss;
                    }
                };
            }
        }
    }