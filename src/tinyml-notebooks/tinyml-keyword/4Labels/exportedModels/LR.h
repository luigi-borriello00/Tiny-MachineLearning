#pragma once
#include <cstdarg>
namespace Eloquent {
    namespace ML {
        namespace Port {
            class LogisticRegression {
                public:
                    /**
                    * Predict class for features vector
                    */
                    int predict(float *x) {
                        float votes[4] = { -0.839690754983 ,-1.526493330629 ,-1.307906306622 ,-1.20304761546  };
                        votes[0] += dot(x,   -0.857402606163  , 0.334268853022  , 0.323851225077  , -0.406187175486  , -0.50338415035  , 0.045164143863  , 0.192156681079  , 0.316218607387  , 0.419658553466  , -0.128185433768  , 0.296505438167  , -0.297472681621  , 0.076894559948  , -0.001844180983  , -0.017837382072  , 0.587093138137  , -0.524345736771  , -0.414358698305  , -0.661479011711  , 0.478806929567  , -0.42003317689  , 0.102185468159  , 0.009865914037  , -0.235942075445  , 0.901948535566  , -0.707426817619  , 0.100895736032  , -0.578679899404  , 0.664307110427  , 0.241653259638  , -0.637083067628  , 0.33292174325 );
                        votes[1] += dot(x,   -0.255991189864  , -0.250428606753  , -0.161040141661  , 0.654253746507  , 0.004585872982  , -0.015298382935  , -0.390816006252  , -0.196966357622  , -0.770051018358  , -0.313699230628  , -0.04167701633  , 0.345879273246  , 0.115535509004  , 0.050150229533  , 0.234026347692  , -0.470984894663  , 0.574774710199  , 0.121523569333  , -0.212051956173  , 0.426649270983  , -0.031956940657  , -0.082491127804  , -0.113897134038  , 0.042730588373  , 0.0151799279  , -0.059847525561  , -0.26964230614  , 0.650845759352  , -0.279961264731  , -0.278628425419  , 0.244577774571  , 0.207727087664 );
                        votes[2] += dot(x,   0.556683403128  , 0.590430523327  , -0.047116823138  , -0.542326774644  , -0.020460784964  , 0.236037252434  , 0.26164229103  , 0.050759842185  , 0.170679876161  , -0.109143037128  , -0.535847935863  , 0.138946584765  , 0.111505765824  , 0.206840879533  , -0.470180979426  , -0.038548475581  , -0.247669819913  , 0.71502965419  , -0.33285428186  , -1.466479887564  , 1.179106143451  , 0.016282671076  , -0.202883296758  , 0.442656685869  , -0.640613648526  , 0.101849654807  , 0.404932254862  , -0.3471045421  , 0.012941124504  , 0.121496226304  , -0.250603584363  , -0.06529121621 );
                        votes[3] += dot(x,   0.443151742074  , -0.719637006223  , -0.223297050319  , 0.320437693806  , 0.544667315053  , -0.231504245191  , -0.217948816879  , -0.160437631399  , 0.065182977693  , 0.503594840651  , 0.200625028837  , -0.053786335194  , -0.317135479031  , -0.275949088697  , 0.079173891746  , 0.204605470021  , -0.190357728972  , -0.263167678436  , 0.42088309811  , 0.52549353094  , -0.682787108346  , -0.036031660552  , 0.211835365092  , -0.262651431349  , -0.04815961359  , 0.711683001113  , -0.562875087342  , 0.219490355847  , -0.14917998566  , 0.149510885617  , 0.265096994484  , -0.348937704913 );
                        // return argmax of votes
                        uint8_t classIdx = 0;
                        float maxVotes = votes[0];

                        for (uint8_t i = 1; i < 4; i++) {
                            if (votes[i] > maxVotes) {
                                classIdx = i;
                                maxVotes = votes[i];
                            }
                        }

                        return classIdx;
                    }

                protected:
                    /**
                    * Compute dot product
                    */
                    float dot(float *x, ...) {
                        va_list w;
                        va_start(w, 32);
                        float dot = 0.0;

                        for (uint16_t i = 0; i < 32; i++) {
                            const float wi = va_arg(w, double);
                            dot += x[i] * wi;
                        }

                        return dot;
                    }
                };
            }
        }
    }