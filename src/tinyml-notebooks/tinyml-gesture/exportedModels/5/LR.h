#pragma once
#include <cstdarg>
namespace Eloquent {
    namespace ML {
        namespace Port {
            class LogisticRegression {
                public:
                    /**
                    * Predict class for features vector
                    */
                    int predict(float *x) {
                        float votes[5] = { -1.245159200921 ,-2.393326769727 ,-1.732330420856 ,-1.388351778772 ,-1.482640460563  };
                        votes[0] += dot(x,   -0.892192673481  , 0.366825607148  , 0.146087591131  , -0.084205551218  , -0.83746385457  , 0.116095295888  , -0.101414236183  , 0.309431978975  , 1.020737373099  , 0.015167804862  , 0.606687566898  , -0.570202941415  , -0.208799900363  , 0.253205354578  , -0.482281661192  , 0.415233860679  , -0.421925888741  , -0.641839965627  , -0.761439913577  , 0.947058268137  , -0.164920599582  , 0.09958834224  , -0.038774949382  , -0.42054186999  , 0.578179976736  , -0.370291423477  , -0.496733257945  , -0.211494882353  , 0.816546283408  , 0.19285611896  , -0.364467290171  , 0.132319179498 );
                        votes[1] += dot(x,   0.337009357409  , -0.755854342137  , -0.588476319315  , 1.109457211647  , 0.336578131948  , -0.582274506873  , 0.213187597656  , -0.443649169725  , -0.786954116608  , -0.23458626645  , 0.195243003444  , 0.386219118622  , -0.164160799756  , -0.087974727638  , 0.131012945136  , 0.135123260694  , 0.429932154482  , 0.728867769181  , -0.25480493653  , 0.006025819423  , 0.074588754885  , 0.349690841764  , -0.168086101974  , -0.610947976708  , 0.613266412453  , -0.329201314154  , -0.050327736898  , 0.846318447582  , -0.828271818068  , 0.254268221918  , -0.438662666686  , 0.118580455743 );
                        votes[2] += dot(x,   0.795177270463  , 0.335521618595  , -0.46350625864  , -0.146287602371  , -0.036724796251  , 0.266952198158  , -0.097899647229  , 0.319667874799  , 0.517468681477  , 0.046716613597  , -1.093496103181  , 0.534285269745  , 0.084872677491  , 0.097744588462  , -0.324112068581  , 0.163103442065  , -0.288688537718  , -0.0764003007  , 0.020103526886  , -0.711034489256  , 0.974286048874  , -0.377501758656  , -0.024938874766  , 0.189951612189  , -0.35649316269  , 0.012379860138  , 0.539137725598  , -0.560702131984  , 0.375573550088  , -0.141569456254  , -0.059605001571  , 0.025703337633 );
                        votes[3] += dot(x,   -0.356074244145  , 0.396805333232  , 0.599005823954  , -0.285193627775  , -0.023406585739  , 0.404573894196  , 0.508401792848  , -1.037502403158  , -1.488758695072  , -0.527699975983  , -0.443123954103  , 0.241681393852  , 0.972197886157  , -0.026556230017  , -0.067000999994  , -0.759237102209  , 0.03717552683  , 0.13640816773  , -0.197629836683  , -0.989788329342  , -0.384181248215  , 0.516233381923  , 0.071760991013  , 0.783596738936  , -0.555896761745  , 0.278926607715  , -0.229091142603  , -0.314711072599  , 0.331543393625  , 0.129713578053  , 0.198102660777  , 0.084680115164 );
                        votes[4] += dot(x,   0.358598115165  , -1.055253765905  , 0.01367042085  , -0.198249623093  , 0.749359057935  , -0.253852043877  , -0.406596345509  , 0.647847208371  , -0.015177375424  , 0.16888468976  , 0.271472458835  , -0.192637722085  , -0.618140957984  , -0.04710795111  , 0.292791665161  , 0.415516358227  , -0.243453569572  , -0.494490616952  , 0.375889794974  , 0.574325833967  , -0.472361532262  , -0.233742074744  , 0.270281823465  , -0.272254760123  , -0.155987853244  , 0.510266660488  , -0.340201740825  , 0.354136939899  , -0.331762529743  , -0.141166808054  , 0.419528959096  , -0.458127241178 );
                        // return argmax of votes
                        uint8_t classIdx = 0;
                        float maxVotes = votes[0];

                        for (uint8_t i = 1; i < 5; i++) {
                            if (votes[i] > maxVotes) {
                                classIdx = i;
                                maxVotes = votes[i];
                            }
                        }

                        return classIdx;
                    }

                protected:
                    /**
                    * Compute dot product
                    */
                    float dot(float *x, ...) {
                        va_list w;
                        va_start(w, 32);
                        float dot = 0.0;

                        for (uint16_t i = 0; i < 32; i++) {
                            const float wi = va_arg(w, double);
                            dot += x[i] * wi;
                        }

                        return dot;
                    }
                };
            }
        }
    }