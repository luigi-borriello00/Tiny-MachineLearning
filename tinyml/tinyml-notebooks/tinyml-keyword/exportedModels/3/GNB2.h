#pragma once
#include <cstdarg>
namespace Eloquent {
    namespace ML {
        namespace Port {
            class GaussianNB {
                public:
                    /**
                    * Predict class for features vector
                    */
                    int predict(float *x) {
                        float votes[3] = { 0.0f };
                        float theta[32] = { 0 };
                        float sigma[32] = { 0 };
                        theta[0] = 0.250818858168; theta[1] = 0.234510868481; theta[2] = 0.119654301173; theta[3] = 0.081810940319; theta[4] = 0.077942080513; theta[5] = 0.096818342906; theta[6] = 0.266022925236; theta[7] = 0.401142028032; theta[8] = 0.292814897693; theta[9] = 0.294494266754; theta[10] = 0.182119554809; theta[11] = 0.175119016602; theta[12] = 0.128023501265; theta[13] = -0.015494206551; theta[14] = -0.094690704205; theta[15] = -0.078728731516; theta[16] = -0.090571909748; theta[17] = -0.042338150432; theta[18] = -0.028309488327; theta[19] = -0.00017824036; theta[20] = 0.030825966887; theta[21] = 0.081638908315; theta[22] = 0.152848258445; theta[23] = 0.295404851238; theta[24] = 0.402159961922; theta[25] = 0.421849853339; theta[26] = 0.556634911435; theta[27] = 0.585253210034; theta[28] = 0.665135635846; theta[29] = 0.542289068994; theta[30] = 0.416438105687; theta[31] = 0.240086627758;
                        sigma[0] = 0.881408985851; sigma[1] = 0.682356463884; sigma[2] = 0.378240648054; sigma[3] = 0.338381575514; sigma[4] = 0.341638940297; sigma[5] = 0.295738800379; sigma[6] = 0.389805793386; sigma[7] = 0.362247286256; sigma[8] = 0.359346378206; sigma[9] = 0.461047013798; sigma[10] = 0.48903445424; sigma[11] = 0.600492821495; sigma[12] = 0.382136242835; sigma[13] = 0.274671055515; sigma[14] = 0.160245210856; sigma[15] = 0.135187594772; sigma[16] = 0.110967145468; sigma[17] = 0.108582118189; sigma[18] = 0.218130438948; sigma[19] = 0.580303837834; sigma[20] = 1.190190219926; sigma[21] = 2.091949569529; sigma[22] = 1.810705503207; sigma[23] = 5.121085412248; sigma[24] = 7.202388722879; sigma[25] = 7.453641463592; sigma[26] = 9.777683028723; sigma[27] = 11.610199756717; sigma[28] = 12.951348213951; sigma[29] = 7.690564735266; sigma[30] = 3.365876856611; sigma[31] = 1.053310805397;
                        votes[0] = 0.333333333333 - gauss(x, theta, sigma);
                        theta[0] = 0.251449395772; theta[1] = 0.10618492779; theta[2] = 0.194810409004; theta[3] = 0.156898237102; theta[4] = 0.050744220841; theta[5] = -0.138878263111; theta[6] = -0.15515603973; theta[7] = -0.072748195583; theta[8] = -0.085161084662; theta[9] = 0.077463958369; theta[10] = 0.440260177437; theta[11] = 0.813370211051; theta[12] = 0.904562854514; theta[13] = 1.094628570511; theta[14] = 1.127615410794; theta[15] = 1.147365642295; theta[16] = 1.230977774191; theta[17] = 1.259605837212; theta[18] = 1.321080859828; theta[19] = 1.413868373755; theta[20] = 1.792007992857; theta[21] = 2.016881653586; theta[22] = 1.707145655383; theta[23] = 2.060000727903; theta[24] = 1.858052532812; theta[25] = 1.505129303413; theta[26] = 1.468438903379; theta[27] = 1.265754341259; theta[28] = 1.079476279436; theta[29] = 1.052560958714; theta[30] = 1.050257400544; theta[31] = 0.932202767683;
                        sigma[0] = 1.544583459122; sigma[1] = 1.104092252605; sigma[2] = 0.988502446698; sigma[3] = 0.975527968646; sigma[4] = 0.8913279941; sigma[5] = 0.727552106917; sigma[6] = 0.666641253825; sigma[7] = 0.516751146456; sigma[8] = 0.483801261801; sigma[9] = 0.615170922525; sigma[10] = 1.024030821845; sigma[11] = 2.003963881438; sigma[12] = 1.40165326299; sigma[13] = 1.709883097221; sigma[14] = 1.344170797545; sigma[15] = 1.221614403178; sigma[16] = 1.109817158804; sigma[17] = 1.181198113021; sigma[18] = 1.378683636229; sigma[19] = 1.959045306193; sigma[20] = 3.795611331398; sigma[21] = 5.821424287624; sigma[22] = 4.835815545531; sigma[23] = 8.308072470195; sigma[24] = 8.549464690759; sigma[25] = 8.057876936333; sigma[26] = 8.854436162123; sigma[27] = 8.164993302459; sigma[28] = 6.33338950863; sigma[29] = 5.7648564066; sigma[30] = 6.58795549461; sigma[31] = 6.909972940881;
                        votes[1] = 0.333333333333 - gauss(x, theta, sigma);
                        theta[0] = 0.602803246552; theta[1] = 0.143355235241; theta[2] = 0.086137667113; theta[3] = 0.062947877338; theta[4] = 0.156581937392; theta[5] = 0.038205955703; theta[6] = 0.115135169927; theta[7] = 0.227233534405; theta[8] = 0.113188337503; theta[9] = 0.173901944006; theta[10] = 0.090869045032; theta[11] = 0.121337854133; theta[12] = 0.142040813388; theta[13] = 0.106455109757; theta[14] = 0.092132509235; theta[15] = 0.122275042408; theta[16] = 0.144785103848; theta[17] = 0.174920215234; theta[18] = 0.205779094066; theta[19] = 0.183447005293; theta[20] = 0.194834388682; theta[21] = 0.219234189628; theta[22] = 0.311922425794; theta[23] = 0.285246584291; theta[24] = 0.308553678993; theta[25] = 0.300393429853; theta[26] = 0.32484122384; theta[27] = 0.278984795912; theta[28] = 0.221515130976; theta[29] = 0.224352660017; theta[30] = 0.232332050419; theta[31] = 0.125614653305;
                        sigma[0] = 1.832406588284; sigma[1] = 1.049254516758; sigma[2] = 0.83572479385; sigma[3] = 1.015898238273; sigma[4] = 0.955388611343; sigma[5] = 0.504356822859; sigma[6] = 0.513047667409; sigma[7] = 0.425024658145; sigma[8] = 0.307172112961; sigma[9] = 0.383516493628; sigma[10] = 0.317455863897; sigma[11] = 0.367859487664; sigma[12] = 0.22009406496; sigma[13] = 0.201213209906; sigma[14] = 0.176319966988; sigma[15] = 0.170503370852; sigma[16] = 0.17349824788; sigma[17] = 0.193807647211; sigma[18] = 0.252376838501; sigma[19] = 0.291279084385; sigma[20] = 0.467489801643; sigma[21] = 0.684374032139; sigma[22] = 1.465817945561; sigma[23] = 1.005861372543; sigma[24] = 1.074276345291; sigma[25] = 1.081973269409; sigma[26] = 1.450347223438; sigma[27] = 1.194273060613; sigma[28] = 1.063385616907; sigma[29] = 1.135409805277; sigma[30] = 1.072425124954; sigma[31] = 0.776378600974;
                        votes[2] = 0.333333333333 - gauss(x, theta, sigma);
                        // return argmax of votes
                        uint8_t classIdx = 0;
                        float maxVotes = votes[0];

                        for (uint8_t i = 1; i < 3; i++) {
                            if (votes[i] > maxVotes) {
                                classIdx = i;
                                maxVotes = votes[i];
                            }
                        }

                        return classIdx;
                    }

                protected:
                    /**
                    * Compute gaussian value
                    */
                    float gauss(float *x, float *theta, float *sigma) {
                        float gauss = 0.0f;

                        for (uint16_t i = 0; i < 32; i++) {
                            gauss += log(sigma[i]);
                            gauss += abs(x[i] - theta[i]) / sigma[i];
                        }

                        return gauss;
                    }
                };
            }
        }
    }