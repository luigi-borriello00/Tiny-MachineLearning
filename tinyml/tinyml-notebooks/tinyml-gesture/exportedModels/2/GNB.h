#pragma once
#include <cstdarg>
namespace Eloquent {
    namespace ML {
        namespace Port {
            class GaussianNB {
                public:
                    /**
                    * Predict class for features vector
                    */
                    int predict(float *x) {
                        float votes[2] = { 0.0f };
                        float theta[32] = { 0 };
                        float sigma[32] = { 0 };
                        theta[0] = 0.238362077733; theta[1] = 0.193016852963; theta[2] = 0.108571688933; theta[3] = 0.070339592731; theta[4] = 0.086239479117; theta[5] = 0.057367633513; theta[6] = 0.108578357243; theta[7] = 0.167136603319; theta[8] = 0.144746094841; theta[9] = 0.186446253858; theta[10] = 0.260362812523; theta[11] = 0.27491672595; theta[12] = 0.319370038943; theta[13] = 0.209140049208; theta[14] = 0.170955747055; theta[15] = 0.088857960257; theta[16] = 0.0419547501; theta[17] = 0.076895694522; theta[18] = 0.069801548042; theta[19] = 0.107408847282; theta[20] = 0.201468849598; theta[21] = 0.221364325585; theta[22] = 0.276736849348; theta[23] = 0.34315534609; theta[24] = 0.402614045407; theta[25] = 0.406933561676; theta[26] = 0.465816413708; theta[27] = 0.451755139576; theta[28] = 0.521552146546; theta[29] = 0.446651376524; theta[30] = 0.361487554626; theta[31] = 0.283415526078;
                        sigma[0] = 0.920332256627; sigma[1] = 0.669386159022; sigma[2] = 0.467084952904; sigma[3] = 0.525340840951; sigma[4] = 0.63506011022; sigma[5] = 0.41997798266; sigma[6] = 0.493866852557; sigma[7] = 0.395275645204; sigma[8] = 0.402155084746; sigma[9] = 0.411834601947; sigma[10] = 0.644974899544; sigma[11] = 0.857623559012; sigma[12] = 1.3022913307; sigma[13] = 0.928773088563; sigma[14] = 0.979190536856; sigma[15] = 0.837774018542; sigma[16] = 0.643113711537; sigma[17] = 0.787179511091; sigma[18] = 1.044555549234; sigma[19] = 2.030329208033; sigma[20] = 2.75387777091; sigma[21] = 3.537176657344; sigma[22] = 3.069938859637; sigma[23] = 4.915322112469; sigma[24] = 5.784244256212; sigma[25] = 6.533458902444; sigma[26] = 5.901566862875; sigma[27] = 6.923097496232; sigma[28] = 7.490297807973; sigma[29] = 4.49911689252; sigma[30] = 2.067906139172; sigma[31] = 1.091233474117;
                        votes[0] = 0.5 - gauss(x, theta, sigma);
                        theta[0] = 0.54388925779; theta[1] = 0.219874722883; theta[2] = 0.156961600025; theta[3] = 0.19119334126; theta[4] = 0.207079435909; theta[5] = 9.630465e-06; theta[6] = -0.040331671231; theta[7] = 0.022229275757; theta[8] = 0.025966944172; theta[9] = 0.131201567079; theta[10] = 0.208707841244; theta[11] = 0.272676249554; theta[12] = 0.363148016429; theta[13] = 0.323364352322; theta[14] = 0.425080054952; theta[15] = 0.433677324458; theta[16] = 0.493747649171; theta[17] = 0.594865499649; theta[18] = 0.604827445731; theta[19] = 0.522130646181; theta[20] = 0.549029267904; theta[21] = 0.510588686162; theta[22] = 0.46692090687; theta[23] = 0.492089067098; theta[24] = 0.477425834878; theta[25] = 0.507724940959; theta[26] = 0.48979993611; theta[27] = 0.480996172291; theta[28] = 0.439632044694; theta[29] = 0.414352593981; theta[30] = 0.4069955693; theta[31] = 0.323443392495;
                        sigma[0] = 1.743097413686; sigma[1] = 1.128087820449; sigma[2] = 0.927545719834; sigma[3] = 1.498924747428; sigma[4] = 1.323232077672; sigma[5] = 0.6382889788; sigma[6] = 0.554125600112; sigma[7] = 0.433826285357; sigma[8] = 0.397671078337; sigma[9] = 0.377708709278; sigma[10] = 0.449859752385; sigma[11] = 0.521641428106; sigma[12] = 0.861738029017; sigma[13] = 0.570485222609; sigma[14] = 0.794187808025; sigma[15] = 0.858704358168; sigma[16] = 0.823375682062; sigma[17] = 1.333175179577; sigma[18] = 1.325027907043; sigma[19] = 1.255210627471; sigma[20] = 1.373674460509; sigma[21] = 1.450672388605; sigma[22] = 1.31889429261; sigma[23] = 1.295526798777; sigma[24] = 1.161823938184; sigma[25] = 1.239507611181; sigma[26] = 1.262447305907; sigma[27] = 1.22272914834; sigma[28] = 1.154763768804; sigma[29] = 1.162477622043; sigma[30] = 1.103737220228; sigma[31] = 0.905635257561;
                        votes[1] = 0.5 - gauss(x, theta, sigma);
                        // return argmax of votes
                        uint8_t classIdx = 0;
                        float maxVotes = votes[0];

                        for (uint8_t i = 1; i < 2; i++) {
                            if (votes[i] > maxVotes) {
                                classIdx = i;
                                maxVotes = votes[i];
                            }
                        }

                        return classIdx;
                    }

                protected:
                    /**
                    * Compute gaussian value
                    */
                    float gauss(float *x, float *theta, float *sigma) {
                        float gauss = 0.0f;

                        for (uint16_t i = 0; i < 32; i++) {
                            gauss += log(sigma[i]);
                            gauss += abs(x[i] - theta[i]) / sigma[i];
                        }

                        return gauss;
                    }
                };
            }
        }
    }